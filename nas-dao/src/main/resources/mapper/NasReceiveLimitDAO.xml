<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minyan.nasdao.NasReceiveLimitDAO">
  <resultMap id="BaseResultMap" type="com.minyan.nascommon.po.ReceiveLimitPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="receive_rule_id" jdbcType="BIGINT" property="receive_rule_id" />
    <result column="event_key" jdbcType="VARCHAR" property="event_key" />
    <result column="limit_json" jdbcType="VARCHAR" property="limit_json" />
    <result column="limit_type" jdbcType="INTEGER" property="limit_type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="del_tag" jdbcType="INTEGER" property="del_tag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, receive_rule_id, event_key, limit_json, limit_type, create_time, update_time, 
    del_tag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nas_receive_limit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nas_receive_limit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minyan.nascommon.po.ReceiveLimitPO" useGeneratedKeys="true">
    insert into nas_receive_limit (receive_rule_id, event_key, limit_json, 
      limit_type, create_time, update_time, 
      del_tag)
    values (#{receive_rule_id,jdbcType=BIGINT}, #{event_key,jdbcType=VARCHAR}, #{limit_json,jdbcType=VARCHAR}, 
      #{limit_type,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, 
      #{del_tag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minyan.nascommon.po.ReceiveLimitPO" useGeneratedKeys="true">
    insert into nas_receive_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receive_rule_id != null">
        receive_rule_id,
      </if>
      <if test="event_key != null">
        event_key,
      </if>
      <if test="limit_json != null">
        limit_json,
      </if>
      <if test="limit_type != null">
        limit_type,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="del_tag != null">
        del_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receive_rule_id != null">
        #{receive_rule_id,jdbcType=BIGINT},
      </if>
      <if test="event_key != null">
        #{event_key,jdbcType=VARCHAR},
      </if>
      <if test="limit_json != null">
        #{limit_json,jdbcType=VARCHAR},
      </if>
      <if test="limit_type != null">
        #{limit_type,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="del_tag != null">
        #{del_tag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minyan.nascommon.po.ReceiveLimitPO">
    update nas_receive_limit
    <set>
      <if test="receive_rule_id != null">
        receive_rule_id = #{receive_rule_id,jdbcType=BIGINT},
      </if>
      <if test="event_key != null">
        event_key = #{event_key,jdbcType=VARCHAR},
      </if>
      <if test="limit_json != null">
        limit_json = #{limit_json,jdbcType=VARCHAR},
      </if>
      <if test="limit_type != null">
        limit_type = #{limit_type,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="del_tag != null">
        del_tag = #{del_tag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minyan.nascommon.po.ReceiveLimitPO">
    update nas_receive_limit
    set receive_rule_id = #{receive_rule_id,jdbcType=BIGINT},
      event_key = #{event_key,jdbcType=VARCHAR},
      limit_json = #{limit_json,jdbcType=VARCHAR},
      limit_type = #{limit_type,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      del_tag = #{del_tag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>